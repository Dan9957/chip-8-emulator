name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SDL dependencies
      run: |
        # Replace the package installation commands with the appropriate ones for your Linux distribution
        sudo apt-get update
        sudo apt-get install -y build-essential libsdl1.2-dev

    - name: Build project
      run: make

    - name: Create Git tag
      id: create_tag
      run: echo ::set-output name=tag_name::v$(shell git describe --tags --abbrev=0)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Git tag
      run: git tag $(echo ${{ steps.create_tag.outputs.tag_name }})
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Get git log
      id: git_log
      run: echo ::set-output name=git_log::$(git log --oneline -n 5)
      shell: bash

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ steps.create_tag.outputs.tag_name }}
        release_name: Release ${{ steps.create_tag.outputs.tag_name }}
        body: |
          :rocket: New Release is here! Check out the exciting changes:

          ```
          ${{ steps.git_log.outputs.git_log }}
          ```
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload emu binary
      uses: actions/upload-artifact@v2
      with:
        name: emu
        path: build/emu

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download emu binary
      uses: actions/download-artifact@v2
      with:
        name: emu
        path: build

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: ${{ github.event.release.tag_name }}
        release_name: Release ${{ github.event.release.tag_name }}
        body: ${{ github.event.release.body }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload emu binary as asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./build/emu
        asset_name: emu
        asset_content_type: application/octet-stream
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
